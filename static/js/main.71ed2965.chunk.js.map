{"version":3,"sources":["views/Bio.tsx","components/ProjectCard.tsx","views/Portfolio.tsx","components/SkillList.tsx","views/Technical.tsx","views/Landing.tsx","components/NavbarList.tsx","components/Navbar.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","justifyContent","alignItems","typography1","color","palette","dark","main","margin","paddingTop","typography2","padding","marginLeft","marginRight","fontSize","avatar","height","width","borderColor","bgColor","border","borderStyle","borderRadius","light","backgroundColor","wayback","Bio","classes","useState","mobileView","state","setState","useEffect","console","log","setResponsiveness","window","innerWidth","prevState","addEventListener","Typography","className","align","variant","Grid","container","direction","justify","spacing","item","animation","interval","navButtonsAlwaysInvisible","bioPic","map","index","Box","Paper","elevation","Avatar","src","sm","alt","style","bioText","p","textAlign","flexDirection","breakpoints","down","media","typography","firstTile","maxWidth","marginTop","lastTile","marginBottom","allTiles","ProjectCard","props","GridListTile","length","Card","CardMedia","image","imgSrc","title","name","CardContent","gutterBottom","component","description","CardActionArea","CardActions","href","github","target","rel","Button","size","domain","gridList","Portfolio","projectList","GridList","cellHeight","cols","listItem","justifyAvatar","alignSelf","grid","SkillList","md","xs","language","Technical","skillLists","list","random","Math","floor","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","overflowX","App","Container","id","navLinks","path","linkText","textDecoration","textTransform","iconLinks","anchorColor","NavbarList","List","aria-labelledby","classprop","smooth","duration","to","ListItem","button","ListItemText","primary","download","navDisplayFlex","navbar","bg","rightAppBar","mobileNav","menu","borderLeftWidth","Navbar","drawerOpen","AppBar","position","IconButton","edge","onClick","Drawer","anchor","open","onClose","Toolbar","borderTopWidth","nav","Footer","BottomNavigation","paddingBottom","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","fade","fontFamily","join","htmlFontSize","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.71ed2965.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Grid, Box, Typography, Avatar, Paper } from \"@material-ui/core\"\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport bioPic from '../static/bioPic.json';\r\nimport bioText from '../static/bioText.json';\r\nimport Carousel from 'react-material-ui-carousel';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: `flex`,\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    typography1: {\r\n        color: theme.palette.dark?.main,\r\n        margin: `30px`,\r\n        paddingTop: `70px`\r\n    },\r\n    typography2: {\r\n        color: theme.palette.dark?.main,\r\n        padding: `15px`,\r\n        marginLeft: `10px`,\r\n        marginRight: `10px`,\r\n        fontSize: \"1.2rem\"\r\n    },\r\n    avatar: {\r\n        height: `auto`,\r\n        width: `100%`,\r\n        borderColor: theme.palette.dark?.main,\r\n    },\r\n    bgColor: {\r\n        border: `6px`,\r\n        padding: `10px`,\r\n        borderStyle: `solid`,\r\n        borderRadius: 0,\r\n        borderColor: theme.palette.light?.main,\r\n        backgroundColor: theme.palette.wayback?.main,\r\n    },\r\n}));\r\n\r\ninterface IPictureItem {\r\n    src: string,\r\n    alt: string\r\n}\r\n\r\ninterface ITextItem {\r\n    p: string\r\n}\r\n\r\nconst Bio: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        mobileView: false\r\n    })\r\n\r\n    const { mobileView } = state;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(`component unmounted`)\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < 600\r\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n                : setState((prevState) => ({ ...prevState, mobileView: false }))\r\n        };\r\n        setResponsiveness();\r\n        window.addEventListener('resize', () => setResponsiveness())\r\n    }, [])\r\n\r\n    const bioDesktop = () => {\r\n        return (\r\n\r\n            <Grid\r\n                item container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={6} >\r\n                {bioPic.map((item: IPictureItem, index: number) => (\r\n                    <Grid key={index} item sm={4}>\r\n                        <Paper elevation={4}>\r\n                            <Avatar className={classes.avatar} alt={item.alt} src={item.src} variant={`square`} />\r\n                        </Paper>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const bioMobile = () => {\r\n        return (\r\n            <Grid\r\n                item\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={10} >\r\n                <Carousel animation={\"slide\"} interval={5000} navButtonsAlwaysInvisible={true}>\r\n                    {bioPic.map((item: IPictureItem, index: number) =>\r\n                        <Box className={classes.root} key={index}>\r\n                            <Paper elevation={4}>\r\n                                <Avatar className={classes.avatar} src={item.src} variant={`square`} />\r\n                            </Paper>\r\n                        </Box>)}\r\n                </Carousel>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.typography1} align=\"center\" variant=\"h2\">\r\n                BIO\r\n            </Typography>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={10}\r\n            >\r\n                {mobileView ? bioMobile() : bioDesktop()}\r\n                <Grid item style={{ marginLeft: `-10px`, marginRight: `-10px` }}>\r\n                    <Paper elevation={4} className={classes.bgColor}>\r\n                        {\r\n                            bioText.map((item: ITextItem, index: number) => (\r\n                                <Typography className={classes.typography2} key={index}>\r\n                                    {item.p}\r\n                                </Typography>\r\n                            ))\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { GridListTile, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core'\n\ninterface IProps {\n  props: {\n    name: string,\n    description: string,\n    domain: string,\n    github: string,\n    imgSrc: string,\n  },\n  index: number,\n  length: number\n}\n\n// interface IPropsArray extends Array<IProps>{}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.wayback?.main,\n      justifyContent: 'center',\n      textAlign: 'center',\n      padding: `25px`,\n      display: `flex`,\n      flexDirection: `column`,\n      border: `5px`,\n      borderStyle: `solid`,\n      borderRadius: 0,\n      borderColor: theme.palette.light?.main,\n      height: `70%`,\n      [theme.breakpoints.down('xl')]: {\n        width: `20vw`,\n      },\n      [theme.breakpoints.down('lg')]: {\n        width: `20vw`,\n      },\n      [theme.breakpoints.down('md')]: {\n        width: `25vw`,\n      },\n      [theme.breakpoints.down('sm')]: {\n        width: `30vw`,\n      },\n      [theme.breakpoints.down('xs')]: {\n        width: `60vw`,\n      },\n    },\n    media: {\n      height: 140,\n      border: `3px`,\n      borderStyle: `solid`,\n      borderColor: theme.palette.dark?.main,\n    },\n    typography: {\n      color: theme.palette.dark?.main,\n    },\n    firstTile: {\n      margin: `10px`,\n      maxWidth: `95%`,\n      [theme.breakpoints.down('sm')]: {\n        marginTop: `10px`,\n      },\n    },\n    lastTile: {\n      margin: `10px`,\n      maxWidth: `95%`,\n      [theme.breakpoints.down('sm')]: {\n        marginBottom: `100px`,\n      },\n    },\n    allTiles: {\n      maxWidth: `95%`,\n      margin: `10px`,\n    }\n  }));\n\nconst ProjectCard: React.FC<IProps> = (props): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <GridListTile className={props.index !== props.length - 1 ? (props.index === 0 ? classes.firstTile : classes.allTiles) : classes.lastTile}>\n      <Card className={classes.root}>\n\n        <CardMedia\n          className={classes.media}\n          image={props.props.imgSrc}\n          title={props.props.name}\n        />\n        <CardContent>\n          <Typography className={classes.typography} gutterBottom variant=\"h6\" component=\"h3\">\n            {props.props.name}\n          </Typography>\n          <Typography className={classes.typography} variant=\"body2\" component=\"p\">\n            {props.props.description}\n          </Typography>\n        </CardContent>\n\n        <CardActionArea>\n          <CardActions>\n            <a href={props.props.github} target=\"_blank\" rel=\"noreferrer\">\n              <Button className={classes.typography} size=\"small\">\n                GitHub\n              </Button>\n            </a>\n            <a href={props.props.domain} target=\"_blank\" rel=\"noreferrer\">\n              <Button className={classes.typography} size=\"small\">\n                Deployment\n              </Button>\n            </a>\n          </CardActions>\n        </CardActionArea>\n      </Card>\n    </GridListTile>\n  );\n}\n\nexport default ProjectCard\n","import React from 'react';\r\nimport ProjectCard from '../components/ProjectCard'\r\nimport projectList from '../static/projects.json'\r\nimport { GridList, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\ninterface IItem {\r\n        name: string,        \r\n        description: string, \r\n        domain: string,\r\n        github: string,\r\n        imgSrc: string,\r\n        icon: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        gridList: {\r\n            display: `flex`,\r\n            justifyContent: 'center',\r\n            alignItems: 'top',\r\n            width: `100%`\r\n        },\r\n        typography: {\r\n\r\n            color: theme.palette.dark?.main,\r\n            margin: `30px`,\r\n            paddingTop: `70px`\r\n\r\n        },\r\n        margin: {\r\n            marginBottom: `50px`\r\n        }\r\n    }),\r\n);\r\n\r\n\r\nconst Portfolio: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    const length: number = projectList.length\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.typography} align=\"center\" variant=\"h2\">\r\n                PORTFOLIO\r\n            </Typography>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.margin}\r\n            >    <GridList className={classes.gridList} cellHeight={160} cols={3}>\r\n                    {projectList.map((item: IItem, index: number) => (\r\n                        <ProjectCard key={item.name} props={item} index={index} length={length} />\r\n                    ))}\r\n                </GridList>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Portfolio","\r\n\r\nimport React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Grid, Avatar, Typography } from \"@material-ui/core\"\r\n\r\ninterface PropType {\r\n    language: string,\r\n    avatar: string,\r\n}\r\n\r\ninterface PropTypeArray extends Array<PropType> { }\r\n\r\ninterface IProps {\r\n    props: PropTypeArray,\r\n    title: string,\r\n}\r\n\r\n// interface IPropsArray extends Array<IProps>{}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.wayback?.main,\r\n            padding: `25px`,\r\n            border: `6px`,\r\n            borderStyle: `solid`,\r\n            borderColor: theme.palette.light?.main,\r\n\r\n        },\r\n        typography1: {\r\n            margin: `20px`,\r\n            flexDirection: `column`,\r\n            color: theme.palette.dark?.main,\r\n        },\r\n        typography2: {\r\n            color: theme.palette.dark?.main,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: `.8rem`\r\n            }\r\n        },\r\n        listItem: {\r\n            justifyContent: `top`,\r\n            alignItems: `center`,\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n            width: `50%`,\r\n            height: `80px`,\r\n            [theme.breakpoints.down('md')]: {\r\n                width: `33%`,\r\n                height: `auto`\r\n            }\r\n        },\r\n        justifyAvatar: {\r\n            display: `flex`,\r\n            justifyContent: `center`,\r\n            alignItems: `center`,\r\n            alignSelf: `center`\r\n        },\r\n        grid: {\r\n            width: `100%`,\r\n\r\n        }\r\n    }));\r\n\r\nconst SkillList: React.FC<IProps> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            // alignItems=\"center\"\r\n            className={classes.grid}>\r\n            <Grid\r\n                item>\r\n                <Typography className={classes.typography1} align=\"center\" variant=\"h6\" >\r\n                    {props.title}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                className={classes.root}\r\n                spacing={2}>\r\n                {props.props.map((item, index: number) => (\r\n                    <Grid\r\n                        item\r\n                        key={`${props.title} ${index}`}\r\n                        className={classes.listItem}>\r\n                        {item.avatar ? <Avatar src={item.avatar} variant=\"rounded\" /> : <div />}\r\n                        <Typography className={classes.typography2}>\r\n                            {item.language}\r\n                        </Typography>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}\r\n\r\nexport default SkillList","import React from 'react';\r\nimport { Grid, Typography } from \"@material-ui/core\"\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport skillLists from '../static/skills.json'\r\nimport SkillList from '../components/SkillList'\r\n\r\ninterface IList {\r\n    language: string,\r\n    avatar: string\r\n}\r\n\r\ninterface IListArray extends Array<IList>{}\r\n\r\ninterface IItem {\r\n    title: string,\r\n    list: IListArray\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    typography: {\r\n        color: theme.palette.dark?.main,\r\n        margin: `30px`,\r\n        paddingTop: `70px`\r\n    },\r\n}))\r\n\r\nconst Technical: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.typography} align=\"center\" variant=\"h2\">\r\n                SKILLS\r\n            </Typography>\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"flex-start\"\r\n                justify=\"center\"\r\n                spacing={3}>\r\n                    \r\n                {skillLists.map((item: IItem, index: number) => (\r\n                    <SkillList key={index} props={item.list} title={item.title} />\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Technical","import { Container  } from \"@material-ui/core\";\r\nimport Bio from './Bio';\r\nimport Portfolio from './Portfolio';\r\nimport Technical from './Technical';\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst random: number =  Math.floor(Math.random() * 6)\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  root: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    backgroundSize: `auto`,\r\n    backgroundRepeat: 'intial',\r\n    backgroundPosition: 'center',\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    backgroundImage: `url(/images/bg${random}.png)`,\r\n    backgroundColor: theme.palette.wayback?.main,\r\n    overflowX: \"hidden\"\r\n  },\r\n  typography: {\r\n    alignItems: `center`\r\n  }\r\n\r\n}));\r\n\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.root} maxWidth='xl'>\r\n        <Container id=\"bio\" maxWidth='md' >\r\n          <Bio />\r\n        </Container>\r\n        <Container id=\"technical\" maxWidth='md' >\r\n          <Technical />\r\n        </Container>\r\n        <Container id=\"portfolio\" maxWidth='xl' >\r\n          <Portfolio />\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\r\n\r\ninterface iProps {\r\n    classprop: any;\r\n}\r\n\r\nconst navLinks: { title: string, path: string }[] = [\r\n    { title: `Bio`, path: `bio` },\r\n    { title: `Skills`, path: `technical` },\r\n    { title: `Portfolio`, path: `portfolio` },\r\n]\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n    linkText: {\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        justifyContent: `center`\r\n    },\r\n    iconLinks: {\r\n        display: `inline-flex`,\r\n        height: `48px`,\r\n        width: `48px`,\r\n    },\r\n    anchorColor: {\r\n        color: `white`\r\n    },\r\n}))\r\n\r\n\r\nconst NavbarList: React.FC<iProps> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List component=\"nav\" aria-labelledby=\"main navigation\" className={props.classprop}>\r\n            {navLinks.map((item, index: number) => (\r\n                <ScrollLink smooth={true} duration={500} to={item.path} key={index} className={classes.linkText}>\r\n                    <ListItem button>\r\n                        <ListItemText primary={item.title} />\r\n                    </ListItem>\r\n                </ScrollLink>\r\n            ))}\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.iconLinks} href=\"https://github.com/rroyalty\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img alt=\"github\" className={classes.iconLinks} src=\"/images/GitHub-Mark-Light-64px.png\" />\r\n            </a>\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.iconLinks} href=\"https://www.linkedin.com/in/rroyalty/\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img alt=\"Linked In\" className={classes.iconLinks} src=\"/images/LinkedIn.png\" />\r\n            </a>\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.anchorColor} href=\"mailto: rroyalty@gmail.com\">\r\n                <MailIcon className={classes.iconLinks} />\r\n            </a>\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.anchorColor} href=\"/images/resume.pdf\" download>\r\n                <DescriptionIcon className={classes.iconLinks} />\r\n            </a>\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nexport default NavbarList\r\n","import React, { useState, useEffect } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Drawer, Typography } from \"@material-ui/core\"\nimport NavbarList from './NavbarList'\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    navDisplayFlex: {\n        display: `inline-flex`,\n        justifyContent: `space-between`\n    },\n    navbar: {\n        backgroundColor: theme.palette.bg?.main,\n        borderColor: theme.palette.dark?.main,\n        color: theme.palette.dark?.main,\n        height: `66px`,\n    },\n    iconLinks: {\n        display: `inline-flex`,\n        height: `48px`,\n        width: `48px`,\n\n    },\n    rightAppBar: {\n        marginLeft: `auto`,\n        marginRight: -12,\n    },\n    justifyContent: {\n        display: `flex`,\n        justifyContent: `center`\n    },\n    mobileNav: {\n        display: `flex`,\n        flexDirection: `column`,\n        textDecoration: `none`,\n        textTransform: `uppercase`,\n        justifyContent: `flex-end`,\n\n    },\n    menu: {\n        backgroundColor: theme.palette.bg?.main,\n        border: `0px`,\n        borderLeftWidth: `2px`,\n        borderColor: theme.palette.dark?.main,\n        borderStyle: `solid`,\n        color: theme.palette.dark?.main,\n        display: `flex`,\n        flexDirection: `column`,\n        alignItems: `center`,\n        height: \"100vh\",\n        width: `40vw`,\n    }\n}))\n\n\nconst Navbar: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false\n    })\n\n    const { mobileView, drawerOpen } = state;\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 900\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({ ...prevState, mobileView: false }))\n        };\n        setResponsiveness();\n        window.addEventListener('resize', () => setResponsiveness())\n    }, [])\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\n        const handleDrawerClose = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n        return (\n            <AppBar position=\"fixed\" className={classes.navbar}>\n                <IconButton\n                    {...{\n                        edge: 'start',\n                        color: 'inherit',\n                        'aria-label': 'menu',\n                        'aria-haspopup': 'true',\n                        onClick: handleDrawerOpen,\n\n                    }}\n                    className={classes.mobileNav}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Drawer\n                    {...{\n                        anchor: 'right',\n                        open: drawerOpen,\n                        onClose: handleDrawerClose,\n                    }}>\n                    <NavbarList classprop={classes.menu} />\n                </Drawer>\n            </AppBar>\n        )\n\n    }\n\n    const displayDesktop = () => {\n        return (\n            <AppBar position=\"fixed\" className={classes.navbar}>\n                <Toolbar className=\"nav-style\">\n                    <Typography className={classes.justifyContent} component=\"h3\">\n                        RYAN ROYALTY\n                    </Typography>\n                    <section className={classes.rightAppBar}>\n                        <NavbarList classprop={classes.navDisplayFlex} />\n                    </section>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n\n    return (\n        <div>\n            {mobileView ? displayMobile() : displayDesktop()}\n        </div>\n    )\n}\n\nexport default Navbar\n","import { Container, BottomNavigation, Grid, Typography } from '@material-ui/core'\nimport React from 'react';\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: `flex`,\n        flexDirection: `column`,\n        backgroundColor: theme.palette.bg?.main,\n        borderTopWidth: `2px`,\n        borderColor: theme.palette.light?.main,\n        borderStyle: `solid`,\n        color: theme.palette.dark?.main,\n        justifyContent: `center`,\n        alignItems: `center`,\n        width: `100%`,\n        height: `auto`,\n        margin: `0`,\n        padding: `0`\n    },\n    nav: {\n        display: `flex`,\n        flexDirection: `column`,\n        backgroundColor: theme.palette.bg?.main,\n        justifyContent: `center`,\n        alignItems: `center`,\n        width: `99%`,\n        height: `auto`,\n        margin: `0`,\n        padding: `0`\n    },\n    typography: {\n        display: `flex`,\n        color: theme.palette.dark?.main,\n        alignItems: `center`,\n        justifyContent: `center`,\n        flexDirection: `row`,\n        fontSize: `.7rem`\n    },\n    anchorColor: {\n        color: theme.palette.light?.main,\n    },\n}));\n\n\nconst Footer: React.FC = (): JSX.Element => {\n\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth='xl'>\n            <BottomNavigation className={classes.nav} style={{ paddingTop: \"25px\", paddingBottom: \"25px\" }}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"flex-start\"\n                    spacing={1}\n                >\n                    <Grid item xs={12} sm={4}>\n                        <Typography className={classes.typography}>\n                            This portfolio was created using React, TypeScript and Material UI.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <a className={classes.anchorColor} href=\"https://github.com/rroyalty/rroyalty.github.io\" target=\"_blank\" rel=\"noreferrer\">\n                            <Typography className={classes.typography}>\n                                Portfolio Repository\n                            </Typography>\n                        </a>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Typography className={classes.typography}>\n                            Last Updated: 06/25/2021\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </BottomNavigation>\n        </Container>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Landing from \"./views/Landing\"\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <Navbar />\n      <Landing />\n      <Footer />\n    </>\n\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme, responsiveFontSizes, Theme } from \"@material-ui/core/styles\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n  interface Palette {\n    wayback?: Palette['primary']; \n    bg?: Palette['primary']; \n    dark?: Palette['primary'];\n    light?: Palette['primary'];\n  }\n  interface PaletteOptions {\n    wayback?: PaletteOptions['primary']; \n    bg?: PaletteOptions['primary'];\n    dark?: PaletteOptions['primary'];\n    light?: PaletteOptions['primary'];\n  }\n}\n\nlet theme: Theme = createMuiTheme({\n  palette: {\n    wayback: {\n      main: \"#f3f9ed\",\n    },\n    bg: {\n      main: fade(\"#899d73\", 1),\n    },\n    dark: {\n      main: \"#353535\",\n    },\n    light:{\n      main: \"#003300\",\n    }\n  },\n  typography: {\n    fontFamily: [\n      \"Lora\",\n      \"serif\",\n    ].join(\",\"),\n    fontSize: 8,\n    htmlFontSize: 8 \n  },\n});\n\ntheme = responsiveFontSizes(theme);\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}