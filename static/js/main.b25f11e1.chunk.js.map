{"version":3,"sources":["images/code-Background.jpg","App.tsx","reportWebVitals.ts","components/Navbar/Navbar.tsx","index.tsx"],"names":["App","className","style","backgroundImage","background","backgroundSize","backgroundRepeat","backgroundPosition","height","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","navDisplayFlex","display","justifyContent","linkText","textDecoration","textTransform","color","navbar","backgroundColor","borderBottomWidth","borderColor","borderStyle","iconLinks","rightAppBar","marginLeft","marginRight","navLinks","title","path","Navbar","classes","AppBar","position","Toolbar","List","component","aria-labelledby","map","to","ListItem","button","ListItemText","primary","href","target","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,G,YAAA,IAA0B,6C,eCqB1BA,MAff,WACE,OACE,qBAAKC,UAAU,SAASC,MAAO,CAC3BC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,OAAQ,SACRC,MAAO,YCAAC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0FCERQ,EAAYC,YAAW,CACzBC,eAAgB,CACZC,QAAQ,cACRC,eAAe,iBAEnBC,SAAU,CACNC,eAAe,OACfC,cAAc,YACdC,MAAM,UACNJ,eAAe,UAEnBK,OAAQ,CACJC,gBAAgB,UAChBC,kBAAkB,MAClBC,YAAY,UACZC,YAAY,QACZL,MAAM,WAEVM,UAAW,CACPX,QAAQ,cACRd,OAAO,OACPC,MAAM,QAGVyB,YAAa,CACTC,WAAW,OACXC,aAAc,IAElBb,eAAgB,CACZD,QAAQ,OAERC,eAAe,YAIjBc,EAA8C,CAChD,CAAEC,MAAM,MAAQC,KAAK,QACrB,CAAED,MAAM,YAAcC,KAAK,cAC3B,CAAED,MAAM,OAASC,KAAK,UAoCXC,EAjCU,WACrB,IAAMC,EAAUtB,IAChB,OACI,cAACuB,EAAA,EAAD,CAAQC,SAAS,SAAS1C,UAAWwC,EAAQb,OAA7C,SACI,cAAC,IAAD,UACI,eAACgB,EAAA,EAAD,CAAS3C,UAAU,YAAnB,UACA,qBAAIA,UAAWwC,EAAQlB,eAAvB,gDAAqF,iCAAM,cAAC,IAAD,IAAN,2BAAkD,uBAAMtB,UAAU,kBAAhB,iCAAgE,cAAC,IAAD,IAAhE,kCACnI,yBAASA,UAAWwC,EAAQP,YAA5B,SACI,eAACW,EAAA,EAAD,CAAMC,UAAU,MAAMC,kBAAgB,kBAAkB9C,UAAWwC,EAAQpB,eAA3E,UACKgB,EAASW,KAAI,gBAAGV,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACV,cAAC,IAAD,CAAMU,GAAIV,EAAkBtC,UAAWwC,EAAQjB,SAA/C,SACI,cAAC0B,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACI,cAACC,EAAA,EAAD,CAAcC,QAASf,OAFVA,MAMrB,uDACJ,mBAAGrC,UAAWwC,EAAQR,UAAWqB,KAAK,8BAA8BC,OAAO,SAA3E,SACI,qBAAKtD,UAAWwC,EAAQR,UAAWuB,IAAI,0CAEvC,uDACJ,mBAAGvD,UAAWwC,EAAQR,UAAWqB,KAAK,wCAAwCC,OAAO,SAArF,SACI,qBAAKtD,UAAWwC,EAAQR,UAAWuB,IAAI,yCCjEvEC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BnD,M","file":"static/js/main.b25f11e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/code-Background.47633ae3.jpg\";","import React from 'react';\nimport logo from './logo.svg';\nimport background from './images/code-Background.jpg'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App bg\" style={{ \n        backgroundImage: `url(${background})`, \n        backgroundSize: \"cover\",  \n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        height: \"93.7vh\",\n        width: \"100vw\",\n      }}>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// import { IconButton, Container, Grid, Paper } from \"@material-ui/core\"\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport { AppBar, Toolbar } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n    navDisplayFlex: {\r\n        display: `inline-flex`,\r\n        justifyContent: `space-between`\r\n    },\r\n    linkText: {\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        color: `#C4AC91`,\r\n        justifyContent: `center`\r\n    },\r\n    navbar: {\r\n        backgroundColor: `#181D27`,\r\n        borderBottomWidth: `2px`,\r\n        borderColor: `#C4AC91`,\r\n        borderStyle: `solid`,\r\n        color: `#C4AC91`,\r\n    },\r\n    iconLinks: {\r\n        display: `inline-flex`,\r\n        height: `48px`,\r\n        width: `48px`,\r\n\r\n    },\r\n    rightAppBar: {\r\n        marginLeft: `auto`,\r\n        marginRight: -12,\r\n    },\r\n    justifyContent: {\r\n        display: `flex`,\r\n        // flexDirection: `column`,\r\n        justifyContent: `center`\r\n    }\r\n});\r\n\r\nconst navLinks: { title: string, path: string }[] = [\r\n    { title: `Bio`, path: `/bio` },\r\n    { title: `Portfolio`, path: `/portfolio` },\r\n    { title: `More`, path: `/more` },\r\n]\r\n\r\nconst Navbar: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.navbar}>\r\n            <Router>\r\n                <Toolbar className=\"nav-style\">\r\n                <h3 className={classes.justifyContent}>{`Ryan Royalty`}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span><PhoneIcon />&nbsp;{`(978) 302-9465`}</span><span className=\"is-hidden-touch\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<MailIcon />&nbsp;{`rroyalty@gmail.com`}</span></h3>\r\n                    <section className={classes.rightAppBar}>\r\n                        <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex}>\r\n                            {navLinks.map(({ title, path }) => (\r\n                                <Link to={path} key={title} className={classes.linkText}>\r\n                                    <ListItem button>\r\n                                        <ListItemText primary={title} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            ))}\r\n                                <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                            <a className={classes.iconLinks} href=\"https://github.com/rroyalty\" target=\"_blank\">\r\n                                <img className={classes.iconLinks} src=\"./images/GitHub-Mark-Light-64px.png\" />\r\n                            </a>\r\n                                <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n                            <a className={classes.iconLinks} href=\"https://www.linkedin.com/in/rroyalty/\" target=\"_blank\">\r\n                                <img className={classes.iconLinks} src=\"./images/LinkedIn.png\" />\r\n                            </a>\r\n                        </List>\r\n\r\n                    </section>\r\n                </Toolbar>\r\n            </Router>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Navbar from './components/Navbar/Navbar'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}