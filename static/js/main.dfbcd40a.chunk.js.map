{"version":3,"sources":["views/Bio.tsx","components/ProjectCard.tsx","views/Portfolio.tsx","components/SkillList.tsx","views/Technical.tsx","components/Top5.tsx","components/Wall.tsx","API/API.ts","components/Snoo.tsx","views/Flair.tsx","views/Landing.tsx","components/NavbarList.tsx","components/Navbar.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","justifyContent","alignItems","topPadding","paddingTop","typography","padding","marginLeft","marginRight","avatar","height","width","bgColor","border","borderStyle","borderRadius","borderColor","palette","light","main","backgroundColor","wayback","Bio","classes","useState","mobileView","state","setState","useEffect","console","log","setResponsiveness","window","innerWidth","prevState","addEventListener","Grid","container","direction","justify","spacing","className","item","animation","interval","navButtonsAlwaysInvisible","bioPic","map","index","Box","Paper","elevation","Avatar","src","variant","sm","alt","style","bioText","Typography","component","p","textAlign","media","content","margin","ProjectCard","props","lg","gutterBottom","align","name","Card","CardContent","CardMedia","image","imgSrc","title","description","textDecoration","paddingLeft","paddingRight","tech","join","CardActions","href","github","target","rel","CardActionArea","Button","domain","gridList","Portfolio","projectList","typography1","flexDirection","listItem","breakpoints","down","justifyAvatar","alignSelf","grid","SkillList","md","xs","language","Technical","skillLists","list","listGrid","marginTop","Top5","randomTop5","top5","Math","floor","random","length","xl","List","dense","ListItem","ListItemText","one","two","three","four","five","IconButton","onClick","box","dark","Wall","wall","API","getAllPosts","a","axios","get","overflowY","maxWidth","img","hidden","visibility","Snoo","staticResponse","setResponse","setLength","setTitle","text","setText","date","setDate","setIndex","then","res","data","selftext","Date","created","getMonth","getDate","getFullYear","catch","err","undefined","marginBottom","fontWeight","wordWrap","Flair","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","overflowX","isInViewPort","elem","getBoundingClientRect","top","App","checkEle","bioEle","document","getElementById","technicalEle","portfolioEle","flairEle","stateFunction","removeEventListener","Container","id","navLinks","path","linkText","textTransform","iconLinks","anchorColor","color","buttonBorder","textUnderlineOffset","NavbarList","aria-labelledby","classProp","smooth","duration","to","button","componentState","primary","download","navbarDesktop","navbar","bg","icon","rightAppBar","hamburger","drawer","borderLeftWidth","appBar","Navbar","drawerOpen","AppBar","Toolbar","edge","Drawer","anchor","open","onClose","nav","Footer","BottomNavigation","paddingBottom","currentComponent","setCurrentComponent","Landing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","fade","fontFamily","htmlFontSize","fontSize","h2","h3","lineHeight","h4","subtitle1","subtitle2","fontStyle","allVariants","overrides","MuiListItemText","responsiveFontSizes","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider"],"mappings":"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","file":"static/js/main.dfbcd40a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Box, Typography, Avatar, Paper } from \"@material-ui/core\"\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport bioPic from '../static/bioPic.json';\nimport bioText from '../static/bioText.json';\nimport Carousel from 'react-material-ui-carousel';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n    },\n    topPadding: {\n        paddingTop: `190px`,\n    },\n    typography: {\n        padding: `15px`,\n        marginLeft: `10px`,\n        marginRight: `10px`,\n    },\n    avatar: {\n        height: `auto`,\n        width: `100%`,\n    },\n    bgColor: {\n        border: `6px`,\n        padding: `10px`,\n        borderStyle: `solid`,\n        borderRadius: 0,\n        borderColor: theme.palette.light?.main,\n        backgroundColor: theme.palette.wayback?.main,\n    },\n}));\n\ninterface IPictureItem {\n    src: string,\n    alt: string\n}\n\ninterface ITextItem {\n    p: string\n}\n\nconst Bio: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n\n    const [state, setState] = useState({\n        mobileView: false\n    })\n\n    const { mobileView } = state;\n\n    useEffect(() => {\n        return () => {\n            console.log(`component unmounted`)\n        };\n    }, []);\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 600\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({ ...prevState, mobileView: false }))\n        };\n        setResponsiveness();\n        window.addEventListener('resize', () => setResponsiveness())\n    }, [])\n\n    const bioDesktop = () => {\n        return (\n            <>\n\n                <Grid\n                    item\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={4}\n\n                >\n                    {bioPic.map((item: IPictureItem, index: number) => (\n                        <Grid key={index} item sm={4} >\n                            <Paper elevation={4}>\n                                <Avatar className={classes.avatar} alt={item.alt} src={item.src} variant={`square`} />\n                            </Paper>\n                        </Grid>\n                    ))}\n                </Grid>\n            </>\n        )\n    }\n\n    const bioMobile = () => {\n        return (\n            <Grid\n                item\n                spacing={10}\n            >\n                <Carousel animation={\"slide\"} interval={5000} navButtonsAlwaysInvisible={true}>\n                    {bioPic.map((item: IPictureItem, index: number) =>\n                        <Box className={classes.root} key={index}>\n                            <Paper elevation={4}>\n                                <Avatar className={classes.avatar} src={item.src} variant={`square`} />\n                            </Paper>\n                        </Box>)}\n                </Carousel>\n            </Grid>\n        )\n    }\n\n    return (\n        <>\n            <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={4}\n                className={classes.topPadding}\n            >\n                {mobileView ? bioMobile() : bioDesktop()}\n                <Grid item style={{ marginLeft: `-10px`, marginRight: `-10px` }}>\n                    <Paper elevation={4} className={classes.bgColor}>\n                        {\n                            bioText.map((item: ITextItem, index: number) => (\n                                <Typography className={classes.typography} key={index} variant=\"h3\" component=\"h3\">\n                                    {item.p}\n                                </Typography>\n                            ))\n                        }\n                    </Paper>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Bio","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { Grid, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core'\n\ninterface IProps {\n  props: {\n    name: string,\n    description: string,\n    domain: string,\n    github: string,\n    imgSrc: string,\n    tech: Array<string>\n  },\n  index: number\n}\n\n// interface IPropsArray extends Array<IProps>{}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.wayback?.main,\n      justifyContent: 'center',\n      textAlign: 'center',\n      height: `320px`,\n      borderStyle: `solid`,\n      border: `6px`,\n      borderRadius: `0px`,\n      borderColor: theme.palette.light?.main,\n      alignItems: `stretch`\n    },\n    media: {\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n    content: {\n      padding: `0px`,\n    },\n    justify: {\n      justifyContent: `center`,\n      alignItems: `stretch`,\n      margin: `0px`,\n      padding: `0px`\n    }\n  }));\n\nconst ProjectCard: React.FC<IProps> = (props): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <Grid \n      item\n      container\n      alignItems=\"stretch\"\n      justify=\"space-around\"\n      direction=\"column\"\n      lg={6} \n      sm={12}\n      style={{width: \"100%\"}} >\n      <Typography gutterBottom variant=\"h4\" component=\"h4\" align=\"center\">\n        {props.props.name}\n      </Typography>\n      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <CardMedia\n            component=\"img\"\n            height=\"143\"\n            className={classes.media}\n            image={props.props.imgSrc}\n            title={props.props.name}\n          />\n          <Typography variant=\"h3\" component=\"h3\" style={{margin: `5px`}}>\n            {props.props.description}\n          </Typography>\n          <Typography style={{textDecoration: `underline`}} variant=\"subtitle2\" component=\"p\">\n            {`Technologies Used:`}\n          </Typography>\n          <Typography variant=\"subtitle2\" component=\"p\" style={{paddingLeft: `10px`, paddingRight: `10px`}}>\n            {props.props.tech.join(', ')}\n          </Typography>\n\n\n        </CardContent>\n        <CardActions className={classes.justify}>\n          <a href={props.props.github} target=\"_blank\" rel=\"noreferrer\">\n            <CardActionArea>\n              <Button>\n                GitHub\n              </Button>\n            </CardActionArea>\n          </a>\n          <a href={props.props.domain} target=\"_blank\" rel=\"noreferrer\">\n            <CardActionArea>\n              <Button>\n                Deployment\n              </Button>\n            </CardActionArea>\n          </a>\n        </CardActions>\n\n      </Card>\n    </Grid>\n  );\n}\n\nexport default ProjectCard\n","import React from 'react';\nimport ProjectCard from '../components/ProjectCard'\nimport projectList from '../static/projects.json'\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\ninterface IItem {\n        name: string,        \n        description: string, \n        domain: string,\n        github: string,\n        imgSrc: string,\n        tech: Array<string>\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        gridList: {\n            display: `flex`,\n            justifyContent: 'center',\n            alignItems: 'top',\n            width: `100%`\n        },\n    }),\n);\n\n\nconst Portfolio: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <Typography align=\"center\" variant=\"h2\" component=\"h2\">\n                PROJECTS\n            </Typography>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"stretch\"\n                spacing={4}\n            >    \n                    {projectList.map((item: IItem, index: number) => (\n                        <ProjectCard key={item.name} props={item} index={index} />\n                    ))}\n            </Grid>\n        </>\n    )\n}\n\n\nexport default Portfolio","\n\nimport React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Avatar, Typography } from \"@material-ui/core\"\n\ninterface PropType {\n    language: string,\n    avatar: string,\n}\n\ninterface PropTypeArray extends Array<PropType> { }\n\ninterface IProps {\n    props: PropTypeArray,\n    title: string,\n}\n\n// interface IPropsArray extends Array<IProps>{}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: theme.palette.wayback?.main,\n            padding: `25px`,\n            border: `6px`,\n            borderStyle: `solid`,\n            borderColor: theme.palette.light?.main,\n\n        },\n        typography1: {\n            margin: `20px`,\n            flexDirection: `column`,\n        },\n        listItem: {\n            justifyContent: `top`,\n            alignItems: `center`,\n            display: `flex`,\n            flexDirection: `column`,\n            width: `50%`,\n            height: `80px`,\n            [theme.breakpoints.down('md')]: {\n                width: `33%`,\n                height: `auto`\n            }\n        },\n        justifyAvatar: {\n            display: `flex`,\n            justifyContent: `center`,\n            alignItems: `center`,\n            alignSelf: `center`\n        },\n        grid: {\n            width: `100%`,\n\n        }\n    }));\n\nconst SkillList: React.FC<IProps> = (props): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <Grid\n            item\n            container\n            md={4}\n            xs={12}\n            direction=\"column\"\n            justify=\"flex-start\"\n            className={classes.grid}>\n            <Grid\n                item>\n                <Typography className={classes.typography1} align=\"center\" variant=\"h4\" component=\"h4\" >\n                    {props.title}\n                </Typography>\n            </Grid>\n            <Grid\n                item\n                container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n                className={classes.root}\n                spacing={2}>\n                {props.props.map((item, index: number) => (\n                    <Grid\n                        item\n                        key={`${props.title} ${index}`}\n                        className={classes.listItem}>\n                        {item.avatar ? <Avatar src={item.avatar} variant=\"rounded\" /> : <div />}\n                        <Typography align=\"center\" variant=\"subtitle1\" component=\"p\">\n                            {item.language}\n                        </Typography>\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid >\n    );\n}\n\nexport default SkillList","import React from 'react';\nimport { Grid, Typography } from \"@material-ui/core\"\nimport skillLists from '../static/skills.json'\nimport SkillList from '../components/SkillList'\n\ninterface IList {\n    language: string,\n    avatar: string\n}\n\ninterface IListArray extends Array<IList>{}\n\ninterface IItem {\n    title: string,\n    list: IListArray\n}\n\nconst Technical: React.FC = (): JSX.Element => {\n\n    return (\n        <>\n            <Typography align=\"center\" variant=\"h2\">\n                SKILLSET\n            </Typography>\n\n            <Grid\n                container\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                justify=\"center\"\n                spacing={3}>\n                    \n                {skillLists.map((item: IItem, index: number) => (\n                    <SkillList key={index} props={item.list} title={item.title} />\n                ))}\n            </Grid>\n        </>\n    )\n}\n\nexport default Technical","import React, { useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, List, ListItem, ListItemText, Typography, IconButton } from \"@material-ui/core\"\nimport top5 from '../static/top5.json'\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\n\ninterface ITop5 {\n    title: string,\n    one: string,\n    two: string,\n    three: string,\n    four: string,\n    five: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        listGrid: {\n            backgroundColor: theme.palette.wayback?.main,\n            padding: `25px`,\n            border: `6px`,\n            borderStyle: `solid`,\n            marginTop: `6px`,\n            borderColor: theme.palette.light?.main,\n\n        },\n        justifyAvatar: {\n            display: `flex`,\n            justifyContent: `center`,\n            alignItems: `center`,\n            alignSelf: `center`\n        }\n    }));\n\nconst Top5: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n\n    const randomTop5 = (): ITop5 => {\n        return top5[Math.floor(Math.random() * top5.length)]\n    }\n\n    const [state, setState] = useState<ITop5>(randomTop5)\n\n    return (\n        <Grid\n            item\n            container\n            md={4}\n            xs={12}\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n             >\n\n            <Grid\n                item\n                xl={12}>\n                <Typography style={{margin: `20px`}} align=\"center\" variant=\"h4\" component=\"h4\" >\n                    {`Top 5 ${state.title}`}\n                </Typography>\n            </Grid>\n\n            <Grid\n                item\n                xl={12}\n                className={classes.listGrid}\n                spacing={2}>\n                <List dense={true} style={{ height: `240px` }}>\n                    <ListItem>\n                        <ListItemText >\n                            {`1: ${state.one}`}\n                        </ListItemText>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText>\n                            {`2: ${state.two}`}\n                        </ListItemText>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText>\n                            {`3: ${state.three}`}\n                        </ListItemText>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText>\n                            {`4: ${state.four}`}\n                        </ListItemText>\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText>\n                            {`5: ${state.five}`}\n                        </ListItemText>\n                    </ListItem>\n                </List>\n            </Grid>\n\n            <Grid \n                item\n                container \n                xl={12}\n                justify=\"center\" >\n                <IconButton onClick={() => setState(randomTop5)}>\n                    <RefreshIcon style={{width: `50px`, height: `50px`}} />\n                </IconButton>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Top5","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Avatar, Box, Paper, Typography } from \"@material-ui/core\";\nimport Carousel from 'react-material-ui-carousel';\nimport wall from '../static/wallPic.json';\nimport Zoom from 'react-medium-image-zoom';\nimport 'react-medium-image-zoom/dist/styles.css';\n\ninterface IPictureItem {\n    src: string,\n    alt: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        box: {\n            display: `flex`,\n            justifyContent: `center`,\n            alignItems: `center`,\n            padding: `5px`\n        },\n        topPadding: {\n            paddingTop: `190px`,\n        },\n        typography: {\n            padding: `15px`,\n            marginLeft: `10px`,\n            marginRight: `10px`,\n        },\n        avatar: {\n            height: `302px`,\n            width: `100%`,\n            borderColor: theme.palette.dark?.main,\n        },\n    }));\n\nconst Wall: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n\n    return (\n        <Grid\n            item\n            container\n            md={4}\n            xs={12}\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\" >\n\n            <Grid\n                item\n                xl={12}>\n                <Typography style={{ margin: `20px` }} align=\"center\" variant=\"h4\" component=\"h4\" >\n                    Wall\n                </Typography>\n            </Grid>\n\n            <Grid\n                item\n                xl={12}\n                spacing={2}>\n                    <Carousel animation={\"slide\"} interval={5000} navButtonsAlwaysInvisible={true}>\n                        {wall.map((item: IPictureItem, index: number) =>\n                            <Box className={classes.box} key={index}>\n                                <Zoom>\n                                    <Paper elevation={4}>\n                                        <Avatar className={classes.avatar} src={item.src} variant={`square`} />\n                                    </Paper>\n                                </Zoom>\n                            </Box>)}\n                    </Carousel>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Wall","import axios from 'axios';\n\nconst API = {\n    // getNewestText: () => { return axios.get(`https://rrprofile.herokuapp.com/api/self/newestText`) },\n    // getNewestTitle: () => { return axios.get(`https://rrprofile.herokuapp.com/api/self/newestTitle`) }, \n    // getNewestDate: () => { return axios.get(`https://rrprofile.herokuapp.com/api/self/newestDate`) },\n    getAllPosts: async () => { return await axios.get(`https://rrprofile.herokuapp.com/api/self/allPosts`) }  \n}\n\nexport default API","import React, { useState, useEffect } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Typography, IconButton } from \"@material-ui/core\";\nimport API from '../API/API';\n\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { AxiosResponse } from 'axios';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        listGrid: {\n            backgroundColor: theme.palette.wayback?.main,\n            padding: `25px`,\n            border: `6px`,\n            borderStyle: `solid`,\n            marginTop: `6px`,\n            borderColor: theme.palette.light?.main,\n            overflowY: `scroll`,\n            maxWidth: `100%`,\n            width: `100%`\n        },\n        img: {\n            display: `flex`,\n            justifyContent: `center`,\n            alignItems: `center`,\n            height: `240px`\n        },\n        hidden: {\n            visibility: `hidden`\n        }\n    }));\n\n\nconst Snoo: React.FC = (): JSX.Element => {\n    const classes = useStyles();\n\n    const [staticResponse, setResponse] = useState<AxiosResponse>()\n    const [length, setLength] = useState<number>(0)\n    const [title, setTitle] = useState<string | null>(null);\n    const [text, setText] = useState<string | null>(null);\n    const [date, setDate] = useState<string | null>(null);\n    const [index, setIndex] = useState<number>(0)\n\n    // const [date, setDate] = useState<string | null>(null);\n\n    useEffect(() => {\n        API.getAllPosts().then((res) => {\n            setResponse(res);\n            setLength(res.data.length);\n            setIndex(0);\n            setTitle(res.data[0].title);\n            setText(res.data[0].selftext);\n            const date = new Date(res.data[0].created * 1000)\n            setDate(`${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`);\n        }).catch((err) => {\n            console.log(err)\n            setLength(0);\n            setIndex(0);\n        })\n    }, [])\n\n    useEffect(() => {\n        if (staticResponse?.data[index] !== null && staticResponse?.data[index] !== undefined) {\n            setTitle(staticResponse?.data[index].title);\n            setText(staticResponse?.data[index].selftext);\n            const date = new Date(staticResponse?.data[index].created * 1000)\n            setDate(`${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`);\n        } else {\n            setTitle(null);\n            setText(null);\n            setDate(null)\n        }\n    }, [index])\n\n    const loadingGrid = () => {\n        return (\n            <div className={classes.img} >\n                <img src=\"/images/loading-buffering.gif\" />\n            </div>\n        )\n    }\n\n    const loadedGrid = () => {\n        return (\n            <div style={{ height: `240px` }}>\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    style={{marginBottom: `5px`}}>\n                    <Grid\n                        item>\n                        <Typography style={{ fontWeight: `bold` }}>\n                            {title}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item>\n                        <Typography style={{ fontWeight: `bold` }}>\n                            {date}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Typography style={{ wordWrap: `break-word` }}>\n                    {text}\n                </Typography>\n            </div>\n        )\n    }\n\n    return (\n        <Grid\n            item\n            container\n            md={4}\n            xs={12}\n            justify=\"center\"\n            alignItems=\"center\"\n            direction=\"column\"\n            style={{ marginBottom: \"200px\" }}\n        >\n\n            <Grid\n                item\n                xl={12}>\n                <Typography style={{ margin: `20px` }} align=\"center\" variant=\"h4\" component=\"h4\" >\n                    Dev Blog\n                </Typography>\n            </Grid>\n            <Grid\n                item\n                xl={12}\n                className={classes.listGrid}\n                spacing={2}>\n                {text ? loadedGrid() : loadingGrid()}\n            </Grid>\n            <Grid\n                item\n                container\n                xl={12}\n                justify=\"center\"\n                alignItems=\"center\"\n                direction=\"row\">\n                <Grid\n                    item\n                    container\n                    xs={3}\n                    justify=\"center\"\n                    className={index === length - 1 || !text ? classes.hidden : \"\"}>\n                    <IconButton onClick={() => setIndex(length - 1)} >\n                        <FirstPageIcon style={{ width: `50px`, height: `50px` }} />\n                    </IconButton>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={3}\n                    justify=\"center\"\n                    className={index === length - 1 || !text ? classes.hidden : \"\"}>\n                    <IconButton onClick={() => setIndex(index + 1)}>\n                        <NavigateBeforeIcon style={{ width: `50px`, height: `50px` }} />\n                    </IconButton>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={3}\n                    justify=\"center\"\n                    className={index === 0 || !text ? classes.hidden : \"\"}>\n                    <IconButton onClick={() => setIndex(index - 1)}>\n                        <NavigateNextIcon style={{ width: `50px`, height: `50px` }} />\n                    </IconButton>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={3}\n                    justify=\"center\"\n                    className={index === 0 || !text ? classes.hidden : \"\"}>\n                    <IconButton onClick={() => setIndex(0)}>\n                        <LastPageIcon style={{ width: `50px`, height: `50px` }} />\n                    </IconButton>\n                </Grid>\n\n            </Grid>\n\n        </Grid>\n    );\n}\n\nexport default Snoo","import React from 'react';\nimport { Typography, Grid } from \"@material-ui/core\"\nimport Top5 from '../components/Top5';\nimport Wall from '../components/Wall';\nimport Snoo from '../components/Snoo';\n\n\nconst Flair: React.FC = (): JSX.Element => {\n\n    // I once made a joke that I love ternary operators so much that I put them in my code even if I don't need them, and, well, here we are.\n    const iHeartTernaries = () => {\n        2 + 2 === 4 ? console.log(\"All is well.\") : console.log(\"The clocks were striking thirteen.\")\n    }; \n\n    iHeartTernaries();\n\n    return (\n        <>\n            <Typography align=\"center\" variant=\"h2\">\n                FLAIR\n            </Typography>\n\n            <Grid\n                container\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                justify=\"center\"\n                spacing={3}>\n                    <Top5 />\n                    <Wall />\n                    <Snoo />\n            </Grid>\n        </>\n    )\n}\n\nexport default Flair","import { Container } from \"@material-ui/core\";\nimport Bio from './Bio';\nimport Portfolio from './Portfolio';\nimport Technical from './Technical';\nimport Flair from './Flair';\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useEffect, Dispatch, SetStateAction } from \"react\";\n\ninterface IProps {\n  stateFunction: Dispatch<SetStateAction<string>>\n}\n\nconst random: number = Math.floor(Math.random() * 3)\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    display: `flex`,\n    flexDirection: `column`,\n    backgroundSize: `auto`,\n    backgroundRepeat: 'intial',\n    backgroundPosition: 'center',\n    justifyContent: `center`,\n    alignItems: `center`,\n    backgroundImage: `url(/images/bg${random}.png)`,\n    backgroundColor: theme.palette.wayback?.main,\n    overflowX: \"hidden\",\n    overflowY: \"hidden\"\n  }\n}));\n\nconst isInViewPort = (elem: HTMLElement ) => {\n  const distance = elem.getBoundingClientRect();\n  return (\n    distance.top\n  )\n}\n\nconst App = (props: IProps) => {\n  const classes = useStyles();\n\n  const checkEle = () => {\n    const bioEle  = isInViewPort(document.getElementById(\"bio\")!);\n    const technicalEle = isInViewPort(document.getElementById(\"technical\")!);\n    const portfolioEle = isInViewPort(document.getElementById(\"portfolio\")!);\n    const flairEle = isInViewPort(document.getElementById(\"flair\")!);\n\n    switch (true) {\n      case (bioEle < 250 && bioEle >= -100):\n        props.stateFunction(\"bio\");\n        break;\n      case (technicalEle < 250 && technicalEle >= -100):\n        props.stateFunction(\"technical\");\n        break;\n      case (portfolioEle < 250 && portfolioEle >= -100):\n        props.stateFunction(\"portfolio\");\n        break;\n      case (flairEle < 250 && flairEle >= -100):\n        props.stateFunction(\"flair\");\n        break;\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('scroll', checkEle, true)\n    return () => document.removeEventListener('scroll', checkEle, true)\n  })\n\n  return (\n    <>\n      <Container className={classes.root} maxWidth='xl'>\n        <Container id=\"bio\" maxWidth='md' >\n          <Bio />\n        </Container>\n        <Container id=\"technical\" maxWidth='md' >\n          <Technical />\n        </Container>\n        <Container id=\"portfolio\" maxWidth='md' >\n          <Portfolio />\n        </Container>\n        <Container id=\"flair\" maxWidth='lg' >\n          <Flair />\n        </Container>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React, {SetStateAction, Dispatch} from 'react';\nimport { Link as ScrollLink } from \"react-scroll\";\nimport MailIcon from '@material-ui/icons/Mail';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { Theme, makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\n\ninterface iProps {\n    classProp: any;\n    componentState: string;\n}\n\nconst navLinks: { title: string, path: string }[] = [\n    { title: `Skillset`, path: `technical` },\n    { title: `Projects`, path: `portfolio` },\n    { title: `Flair`, path: `flair` }\n]\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    linkText: {\n        textDecoration: `none`,\n        textTransform: `uppercase`\n    },\n    iconLinks: {\n        display: `inline-flex`,\n        height: `48px`,\n        width: `48px`,\n    },\n    anchorColor: {\n        color: `white`\n    },        \n    buttonBorder: {\n        textDecoration: `underline!important`,\n        textUnderlineOffset: `5px!important`\n    }\n}))\n\n\nconst NavbarList: React.FC<iProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    return (\n        <List component=\"nav\" aria-labelledby=\"main navigation\" className={props.classProp}>\n            {navLinks.map((item, index: number) => (\n                <ScrollLink smooth={true} duration={500} to={item.path} key={index} className={classes.linkText}>\n                    <ListItem button className={item.path === props.componentState ? classes.buttonBorder : \"\" }>\n                        <ListItemText primary={item.title} />\n                    </ListItem>\n                </ScrollLink>\n            ))}\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n            <a className={classes.iconLinks} href=\"https://github.com/rroyalty\" target=\"_blank\" rel=\"noreferrer\">\n                <img alt=\"github\" className={classes.iconLinks} src=\"/images/GitHub-Mark-Light-64px.png\" />\n            </a>\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n            <a className={classes.iconLinks} href=\"https://www.linkedin.com/in/rroyalty/\" target=\"_blank\" rel=\"noreferrer\">\n                <img alt=\"Linked In\" className={classes.iconLinks} src=\"/images/LinkedIn.png\" />\n            </a>\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n            <a className={classes.iconLinks} href=\"https://www.reddit.com/user/rroyaltywebdev\" target=\"_blank\" rel=\"noreferrer\">\n                <img alt=\"Reddit\" className={classes.iconLinks} src=\"https://image.flaticon.com/icons/png/512/1384/1384019.png\" />\n            </a>\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n            <a className={classes.anchorColor} href=\"mailto: rroyalty@gmail.com\">\n                <MailIcon className={classes.iconLinks} />\n            </a>\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n            <a className={classes.anchorColor} href=\"/images/resume.pdf\" download>\n                <DescriptionIcon className={classes.iconLinks} />\n            </a>\n        </List>\n    )\n}\n\n\nexport default NavbarList\n","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Drawer } from \"@material-ui/core\";\nimport NavbarList from './NavbarList';\nimport { Link as ScrollLink } from \"react-scroll\";\nimport { ListItem, ListItemText } from \"@material-ui/core\"\n\ninterface IProps {\n    componentState: string\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    navbarDesktop: {\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`\n    },\n    navbar: {\n        backgroundColor: theme.palette.bg?.main,\n        borderColor: theme.palette.dark?.main,\n        color: theme.palette.dark?.main,\n        justifyContent: `center`,\n        height: `80px`,\n        marginLeft: `auto`,\n        [theme.breakpoints.down('md')]: {\n            marginRight: -12,\n        },\n    },\n    icon: {\n        display: `inline-flex`,\n        height: `48px`,\n        width: `48px`,\n    },\n    rightAppBar: {\n        marginLeft: `auto`,\n        marginRight: -12,\n    },\n    justifyContent: {\n        display: `flex`,\n        justifyContent: `center`\n    },\n    hamburger: {\n        display: `flex`,\n        flexDirection: `column`,\n        textDecoration: `none`,\n        textTransform: `uppercase`,\n        justifyContent: `flex-end`,\n\n    },\n    drawer: {\n        backgroundColor: theme.palette.bg?.main,\n        border: `0px`,\n        borderLeftWidth: `2px`,\n        borderColor: theme.palette.dark?.main,\n        borderStyle: `solid`,\n        color: theme.palette.dark?.main,\n        display: `flex`,\n        flexDirection: `column`,\n        alignItems: `center`,\n        height: \"100vh\",\n        width: `178px`,\n    },\n    appBar: {\n        backgroundColor: theme.palette.bg?.main,\n    },\n    linkText: {\n        textDecoration: `none`,\n        textTransform: `uppercase`,\n        backgroundColor: theme.palette.bg?.main,\n        [theme.breakpoints.down('md')]: {\n            border: `0px`,\n            borderLeftWidth: `2px`,\n            borderColor: theme.palette.light?.main,\n            borderStyle: `solid`,\n        },        \n    },\n    buttonBorder: {\n        textDecoration: `underline!important`,\n        textUnderlineOffset: `5px!important`\n    },\n}))\n\n\nconst Navbar: React.FC<IProps> = (props): JSX.Element => {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false\n    })\n\n    const { mobileView, drawerOpen } = state;\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 960\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({ ...prevState, mobileView: false }))\n        };\n        setResponsiveness();\n        window.addEventListener('resize', () => setResponsiveness())\n    }, [])\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\n        const handleDrawerClose = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n        return (\n            <AppBar className={classes.appBar} >\n                <Toolbar className={classes.navbar}>\n                    <IconButton\n                        edge='start'\n                        color='inherit'\n                        onClick={handleDrawerOpen}\n                        className={classes.hamburger}\n                    >\n                        <MenuIcon className={classes.icon} />\n                    </IconButton>\n                </Toolbar>\n                <Drawer\n                    {...{\n                        anchor: 'right',\n                        open: drawerOpen,\n                        onClose: handleDrawerClose,\n                    }} style={{alignItems: \"center\"}}>\n                    <ScrollLink smooth={true} duration={500} to=\"bio\" className={classes.linkText}>\n                        <ListItem button style={{textAlign: \"center\"}} className={\"bio\" === props.componentState ? classes.buttonBorder : \"\" }>\n                            <ListItemText primary=\"RYAN ROYALTY\" />\n                        </ListItem>\n                    </ScrollLink>\n                    <NavbarList classProp={classes.drawer} componentState={props.componentState} />\n                </Drawer>\n            </AppBar>\n        )\n    }\n\n    const displayDesktop = () => {\n        return (\n            <AppBar className={classes.navbar}>\n                <Toolbar className=\"nav-style\">\n                    <ScrollLink smooth={true} duration={500} to=\"bio\" className={classes.linkText}>\n                        <ListItem button className={\"bio\" === props.componentState ? classes.buttonBorder : \"\" }>\n                            <ListItemText primary=\"RYAN ROYALTY\" />\n                        </ListItem>\n                    </ScrollLink>\n                    <section className={classes.rightAppBar}>\n                        <NavbarList classProp={classes.navbarDesktop} componentState={props.componentState} />\n                    </section>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n\n    return (\n        <>\n            {mobileView ? displayMobile() : displayDesktop()}\n        </>\n    )\n}\n\nexport default Navbar\n","import { Container, BottomNavigation, Grid, Typography } from '@material-ui/core'\nimport React from 'react';\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: `flex`,\n        flexDirection: `column`,\n        backgroundColor: theme.palette.bg?.main,\n        borderColor: theme.palette.bg?.main,\n        borderStyle: `solid`,\n        color: theme.palette.dark?.main,\n        justifyContent: `center`,\n        alignItems: `center`,\n        width: `100%`,\n        height: `auto`,\n        margin: `0`,\n        padding: `0`\n    },\n    nav: {\n        display: `flex`,\n        flexDirection: `column`,\n        backgroundColor: theme.palette.bg?.main,\n        justifyContent: `center`,\n        alignItems: `center`,\n        width: `99%`,\n        height: `auto`,\n        margin: `0`,\n        padding: `0`\n    },\n    anchorColor: {\n        color: theme.palette.light?.main,\n    },\n}));\n\n\nconst Footer: React.FC = (): JSX.Element => {\n\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth='xl'>\n            <BottomNavigation className={classes.nav} style={{ paddingTop: \"25px\", paddingBottom: \"25px\" }}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"flex-start\"\n                    spacing={1}\n                >\n                    <Grid item xs={12} sm={6}>\n                        <Typography align=\"center\" variant=\"subtitle2\" component=\"p\">\n                            This front of this portfolio was created using React, TypeScript, Material UI, Axios, and GitHub Pages.\n                        </Typography>\n                        <a className={classes.anchorColor} href=\"https://github.com/rroyalty/rroyalty.github.io\" target=\"_blank\" rel=\"noreferrer\">\n                            <Typography align=\"center\" variant=\"subtitle2\" component=\"p\">\n                                Front Repository\n                            </Typography>\n                        </a>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography align=\"center\" variant=\"subtitle2\" component=\"p\">\n                            This back of this portfolio was created using Node, Express, TypeScript, Snoowrap, and Heroku.\n                        </Typography>\n                        <a className={classes.anchorColor} href=\"https://github.com/rroyalty/profile-be\" target=\"_blank\" rel=\"noreferrer\">\n                            <Typography align=\"center\" variant=\"subtitle2\" component=\"p\">\n                                Back Repository\n                            </Typography>\n                        </a>\n                    </Grid>\n\n                </Grid>\n            </BottomNavigation>\n        </Container>\n    )\n}\n\nexport default Footer;","import React, { useState, useRef, useEffect } from 'react';\nimport Landing from \"./views/Landing\"\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nconst App: React.FC = (): JSX.Element => {\n\n  const [currentComponent, setCurrentComponent] = useState<string>(\"bio\")\n\n  return (\n    <>\n      <Navbar componentState={currentComponent} />\n      <Landing stateFunction={setCurrentComponent} />\n      <Footer />\n    </>\n\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme, responsiveFontSizes, Theme } from \"@material-ui/core/styles\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n  interface Palette {\n    wayback?: Palette['primary'];\n    bg?: Palette['primary'];\n    dark?: Palette['primary'];\n    light?: Palette['primary'];\n  }\n  interface PaletteOptions {\n    wayback?: PaletteOptions['primary'];\n    bg?: PaletteOptions['primary'];\n    dark?: PaletteOptions['primary'];\n    light?: PaletteOptions['primary'];\n  }\n}\n\nlet theme: Theme = createMuiTheme({\n  palette: {\n    wayback: {\n      main: \"#f3f9ed\",\n    },\n    bg: {\n      main: fade(\"#899d73\", 1),\n    },\n    dark: {\n      main: \"#252525\",\n    },\n    light: {\n      main: \"#003300\",\n    }\n  },\n  typography: {\n    fontFamily: [\n      \"Lora\",\n      \"serif\",\n    ].join(\",\"),\n    htmlFontSize: 20,\n    fontSize: 20,\n    h2: {\n      fontSize: `5rem`,\n      paddingTop: `110px!important`,\n      paddingBottom: `30px!important`\n    },\n    h3: {\n      fontSize: `1.2rem`,\n      lineHeight: 1.5\n    },\n    h4: {\n      fontSize: \"1.3rem\"\n    },\n    subtitle1: {\n      fontSize: \"1rem\"\n    },\n    subtitle2: {\n      fontSize: `.9rem`,\n      fontStyle: `italic`\n    },\n    button: {\n      fontSize: \"1rem\"\n    },\n    allVariants: {\n      color: \"#252525\",\n    }\n  },\n  overrides: {\n    MuiListItemText: {\n      primary: {\n        fontSize: '1.2rem',\n      },\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}