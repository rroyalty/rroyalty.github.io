{"version":3,"sources":["components/CarouselItem.tsx","views/Bio.tsx","components/ProjectCard.tsx","views/Portfolio.tsx","components/SkillList.tsx","views/Technical.tsx","views/Landing.tsx","components/NavbarList.tsx","components/Navbar.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","avatar","height","width","borderStyle","borderColor","palette","light","main","CarouselItem","props","classes","Paper","elevation","Avatar","className","src","variant","root","display","justifyContent","alignItems","typography1","color","dark","margin","paddingTop","typography2","padding","marginLeft","marginRight","fontSize","bgColor","border","borderRadius","backgroundColor","wayback","Bio","useState","mobileView","state","setState","useEffect","console","log","setResponsiveness","window","innerWidth","prevState","addEventListener","Typography","align","Grid","container","direction","justify","spacing","item","animation","interval","navButtonsAlwaysInvisible","bioPic","map","Box","index","sm","alt","style","bioText","p","textAlign","flexDirection","breakpoints","down","media","typography","firstTile","maxWidth","marginTop","lastTile","marginBottom","allTiles","ProjectCard","GridListTile","length","Card","CardMedia","image","imgSrc","title","name","CardContent","gutterBottom","component","description","CardActionArea","CardActions","href","github","target","rel","Button","size","domain","gridList","Portfolio","projectList","GridList","cellHeight","cols","listItem","justifyAvatar","alignSelf","testGrid","SkillList","md","xs","language","Technical","skillLists","list","position","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","alignText","App","Container","id","navLinks","path","linkText","textDecoration","textTransform","iconLinks","anchorColor","NavbarList","List","aria-labelledby","classprop","smooth","duration","to","ListItem","button","ListItemText","primary","download","navDisplayFlex","navbar","bg","rightAppBar","mobileNav","menu","borderLeftWidth","Navbar","drawerOpen","AppBar","IconButton","edge","onClick","Drawer","anchor","open","onClose","Toolbar","borderTopWidth","nav","Footer","BottomNavigation","paddingBottom","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","fade","fontFamily","join","htmlFontSize","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f9bf6f88.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Paper, Avatar  } from \"@material-ui/core\"\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\ninterface IProps {\n    src: string,\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n\n    avatar: {\n        height: \"auto\",\n        width: \"auto\",\n        borderStyle: `solid`,\n        borderColor: theme.palette.light?.main,\n    },\n}));\n\nconst CarouselItem: React.FC<IProps> = (props): JSX.Element => {\n\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={4}>\n            <Avatar className={classes.avatar} src={props.src} variant={`square`} />\n        </Paper>\n    )\n};\n\nexport default CarouselItem;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Box, Typography, Avatar, Paper } from \"@material-ui/core\"\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport bioPic from '../static/bioPic.json';\r\nimport bioText from '../static/bioText.json';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport CarouselItem from '../components/CarouselItem';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: `flex`,\r\n        justifyContent: `center`,\r\n        alignItems: `center`,\r\n    },\r\n    typography1: {\r\n        color: theme.palette.dark?.main,\r\n        margin: `30px`,\r\n        paddingTop: `70px`\r\n    },\r\n    typography2: {\r\n        color: theme.palette.dark?.main,\r\n        padding: `15px`,\r\n        marginLeft: `10px`,\r\n        marginRight: `10px`,\r\n        fontSize: \"1.2rem\"\r\n    },\r\n    avatar: {\r\n        height: `auto`,\r\n        width: `100%`,\r\n        borderColor: theme.palette.dark?.main,\r\n    },\r\n    bgColor: {\r\n        border: `6px`,\r\n        padding: `10px`,\r\n        borderStyle: `solid`,\r\n        borderRadius: 0,\r\n        borderColor: theme.palette.light?.main,\r\n        backgroundColor: theme.palette.wayback?.main,\r\n    },\r\n}));\r\n\r\ninterface IItem {\r\n    index: string,\r\n    src: string,\r\n    alt: string\r\n}\r\n\r\nconst Bio: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        mobileView: false\r\n    })\r\n\r\n    const { mobileView } = state;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(`component unmounted`)\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < 600\r\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n                : setState((prevState) => ({ ...prevState, mobileView: false }))\r\n        };\r\n        setResponsiveness();\r\n        window.addEventListener('resize', () => setResponsiveness())\r\n    }, [])\r\n\r\n    const bioDesktop = () => {\r\n        return (\r\n\r\n            <Grid\r\n                item container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={6} >\r\n                {bioPic.map((item: IItem) => (\r\n                    <Grid key={item.index} item sm={4}>\r\n                        <Paper elevation={4}>\r\n                            <Avatar className={classes.avatar} alt={item.alt} src={item.src} variant={`square`} />\r\n                        </Paper>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const bioMobile = () => {\r\n        return (\r\n            <Grid\r\n                item\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={10} >\r\n                <Carousel animation={\"slide\"} interval={5000} navButtonsAlwaysInvisible={true}>\r\n                    {bioPic.map((item) =>\r\n                        <Box className={classes.root} key={item.index}>\r\n                            <CarouselItem src={item.src} />\r\n                        </Box>)}\r\n                </Carousel>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.typography1} align=\"center\" variant=\"h2\">\r\n                BIO\r\n            </Typography>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={10}\r\n            >\r\n                {mobileView ? bioMobile() : bioDesktop()}\r\n                <Grid item style={{ marginLeft: `-10px`, marginRight: `-10px` }}>\r\n                    <Paper elevation={4} className={classes.bgColor}>\r\n                        {\r\n                            bioText.map(item => (\r\n                                <Typography className={classes.typography2} key={item.index}>\r\n                                    {item.p}\r\n                                </Typography>\r\n                            ))\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bio","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { GridListTile, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core'\n\ninterface IProps {\n  props: {\n    name: string,\n    description: string,\n    domain: string,\n    github: string,\n    imgSrc: string,\n  },\n  index: number,\n  length: number\n}\n\n// interface IPropsArray extends Array<IProps>{}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.wayback?.main,\n      justifyContent: 'center',\n      textAlign: 'center',\n      padding: `25px`,\n      display: `flex`,\n      flexDirection: `column`,\n      border: `5px`,\n      borderStyle: `solid`,\n      borderRadius: 0,\n      borderColor: theme.palette.light?.main,\n      height: `70%`,\n      [theme.breakpoints.down('xl')]: {\n        width: `20vw`,\n      },\n      [theme.breakpoints.down('lg')]: {\n        width: `20vw`,\n      },\n      [theme.breakpoints.down('md')]: {\n        width: `25vw`,\n      },\n      [theme.breakpoints.down('sm')]: {\n        width: `30vw`,\n      },\n      [theme.breakpoints.down('xs')]: {\n        width: `60vw`,\n      },\n    },\n    media: {\n      height: 140,\n      border: `3px`,\n      borderStyle: `solid`,\n      borderColor: theme.palette.light?.main,\n    },\n    typography: {\n      color: theme.palette.dark?.main,\n    },\n    firstTile: {\n      margin: `10px`,\n      maxWidth: `95%`,\n      [theme.breakpoints.down('sm')]: {\n        marginTop: `10px`,\n      },\n    },\n    lastTile: {\n      margin: `10px`,\n      maxWidth: `95%`,\n      [theme.breakpoints.down('sm')]: {\n        marginBottom: `100px`,\n      },\n    },\n    allTiles: {\n      maxWidth: `95%`,\n      margin: `10px`,\n    }\n  }));\n\nconst ProjectCard: React.FC<IProps> = (props): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <GridListTile className={props.index !== props.length - 1 ? (props.index === 0 ? classes.firstTile : classes.allTiles) : classes.lastTile}>\n      <Card className={classes.root}>\n\n        <CardMedia\n          className={classes.media}\n          image={props.props.imgSrc}\n          title={props.props.name}\n        />\n        <CardContent>\n          <Typography className={classes.typography} gutterBottom variant=\"h6\" component=\"h3\">\n            {props.props.name}\n          </Typography>\n          <Typography className={classes.typography} variant=\"body2\" component=\"p\">\n            {props.props.description}\n          </Typography>\n        </CardContent>\n\n        <CardActionArea>\n          <CardActions>\n            <a href={props.props.github} target=\"_blank\" rel=\"noreferrer\">\n              <Button className={classes.typography} size=\"small\">\n                GitHub\n              </Button>\n            </a>\n            <a href={props.props.domain} target=\"_blank\" rel=\"noreferrer\">\n              <Button className={classes.typography} size=\"small\">\n                Deployment\n              </Button>\n            </a>\n          </CardActions>\n        </CardActionArea>\n      </Card>\n    </GridListTile>\n  );\n}\n\nexport default ProjectCard\n","import React from 'react';\r\nimport ProjectCard from '../components/ProjectCard'\r\nimport projectList from '../static/projects.json'\r\nimport { GridList, Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        gridList: {\r\n            display: `flex`,\r\n            justifyContent: 'center',\r\n            alignItems: 'top',\r\n            width: `100%`\r\n        },\r\n        typography: {\r\n\r\n            color: theme.palette.dark?.main,\r\n            margin: `30px`,\r\n            paddingTop: `70px`\r\n\r\n        },\r\n        margin: {\r\n            marginBottom: `50px`\r\n        }\r\n    }),\r\n);\r\n\r\n\r\nconst Portfolio: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    const length: number = projectList.length\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.typography} align=\"center\" variant=\"h2\">\r\n                PORTFOLIO\r\n            </Typography>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.margin}\r\n            >    <GridList className={classes.gridList} cellHeight={160} cols={3}>\r\n                    {projectList.map((item, index: number) => (\r\n                        <ProjectCard key={item.name} props={item} index={index} length={length} />\r\n                    ))}\r\n                </GridList>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Portfolio","\r\n\r\nimport React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Grid, Avatar, Typography } from \"@material-ui/core\"\r\n\r\ninterface PropType {\r\n    language: string,\r\n    avatar: string,\r\n}\r\n\r\ninterface PropTypeArray extends Array<PropType> { }\r\n\r\ninterface IProps {\r\n    props: PropTypeArray,\r\n    title: string,\r\n}\r\n\r\n// interface IPropsArray extends Array<IProps>{}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.wayback?.main,\r\n            padding: `25px`,\r\n            border: `6px`,\r\n            borderStyle: `solid`,\r\n            borderColor: theme.palette.light?.main,\r\n            [theme.breakpoints.down('xl')]: {\r\n                height: `65vh`,\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                height: `auto`,\r\n            }\r\n        },\r\n        typography1: {\r\n            margin: `20px`,\r\n            flexDirection: `column`,\r\n            color: theme.palette.dark?.main,\r\n        },\r\n        typography2: {\r\n            color: theme.palette.dark?.main,\r\n            [theme.breakpoints.down('xs')]: {\r\n                fontSize: `.8rem`\r\n            }\r\n        },\r\n        listItem: {\r\n            justifyContent: `top`,\r\n            alignItems: `center`,\r\n            display: `flex`,\r\n            flexDirection: `column`,\r\n            width: `50%`,\r\n            [theme.breakpoints.down('md')]: {\r\n                width: `33%`\r\n            }\r\n        },\r\n        justifyAvatar: {\r\n            display: `flex`,\r\n            justifyContent: `center`,\r\n            alignItems: `center`,\r\n            alignSelf: `center`\r\n        },\r\n        testGrid: {\r\n            width: `100%`,\r\n        }\r\n    }));\r\n\r\nconst SkillList: React.FC<IProps> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            item\r\n            container\r\n            md={4}\r\n            xs={12}\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            // alignItems=\"center\"\r\n            className={classes.testGrid}>\r\n            <Grid\r\n                item>\r\n                <Typography className={classes.typography1} align=\"center\" variant=\"h6\" >\r\n                    {props.title}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                className={classes.root}\r\n                spacing={2}>\r\n                {props.props.map((item) => (\r\n                    <Grid\r\n                        item\r\n                        key={item.language}\r\n                        className={classes.listItem}>\r\n                        {item.avatar ? <Avatar src={item.avatar} variant=\"rounded\" /> : <div />}\r\n                        <Typography className={classes.typography2}>\r\n                            {item.language}\r\n                        </Typography>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}\r\n\r\nexport default SkillList","import React from 'react';\r\nimport { Grid, Typography } from \"@material-ui/core\"\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport skillLists from '../static/skills.json'\r\nimport SkillList from '../components/SkillList'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    typography: {\r\n        color: theme.palette.dark?.main,\r\n        margin: `30px`,\r\n        paddingTop: `70px`\r\n    },\r\n}))\r\n\r\nconst Technical: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Typography className={classes.typography} align=\"center\" variant=\"h2\">\r\n                SKILLS\r\n            </Typography>\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"flex-start\"\r\n                justify=\"center\"\r\n                spacing={3}>\r\n                    \r\n                {skillLists.map((item) => (\r\n                    <SkillList key={item.index} props={item.list} title={item.title} />\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Technical","import { Container  } from \"@material-ui/core\";\r\nimport Bio from './Bio';\r\nimport Portfolio from './Portfolio';\r\nimport Technical from './Technical';\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  root: {\r\n    position: `static`,\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    backgroundSize: `auto`,\r\n    backgroundRepeat: 'intial',\r\n    backgroundPosition: 'center',\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    backgroundImage: `url(/images/bg.png)`,\r\n    backgroundColor: theme.palette.wayback?.main\r\n  },\r\n  spacing: {\r\n    alignItems: `center`,\r\n    justifyContent: `center`,\r\n    alignText: `center`,\r\n  },\r\n  typography: {\r\n    alignItems: `center`\r\n  }\r\n\r\n}));\r\n\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.root} maxWidth='xl'>\r\n        <Container className={classes.spacing} id=\"bio\" maxWidth='md' >\r\n          <Bio />\r\n        </Container>\r\n        <Container className={classes.spacing} id=\"technical\" maxWidth='md' >\r\n          <Technical />\r\n        </Container>\r\n        <Container className={classes.spacing} id=\"portfolio\" maxWidth='xl' >\r\n          <Portfolio />\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\"\r\n\r\ninterface iProps {\r\n    classprop: any;\r\n}\r\n\r\nconst navLinks: { title: string, path: string }[] = [\r\n    { title: `Bio`, path: `bio` },\r\n    { title: `Skills`, path: `technical` },\r\n    { title: `Portfolio`, path: `portfolio` },\r\n]\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n    linkText: {\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        justifyContent: `center`\r\n    },\r\n    iconLinks: {\r\n        display: `inline-flex`,\r\n        height: `48px`,\r\n        width: `48px`,\r\n    },\r\n    anchorColor: {\r\n        color: `white`\r\n    },\r\n}))\r\n\r\n\r\nconst NavbarList: React.FC<iProps> = (props): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <List component=\"nav\" aria-labelledby=\"main navigation\" className={props.classprop}>\r\n            {navLinks.map(({ title, path }) => (\r\n                <ScrollLink smooth={true} duration={500} to={path} key={title} className={classes.linkText}>\r\n                    <ListItem button>\r\n                        <ListItemText primary={title} />\r\n                    </ListItem>\r\n                </ScrollLink>\r\n            ))}\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.iconLinks} href=\"https://github.com/rroyalty\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img alt=\"github\" className={classes.iconLinks} src=\"/images/GitHub-Mark-Light-64px.png\" />\r\n            </a>\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.iconLinks} href=\"https://www.linkedin.com/in/rroyalty/\" target=\"_blank\" rel=\"noreferrer\">\r\n                <img alt=\"Linked In\" className={classes.iconLinks} src=\"/images/LinkedIn.png\" />\r\n            </a>\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.anchorColor} href=\"mailto: rroyalty@gmail.com\">\r\n                <MailIcon className={classes.iconLinks} />\r\n            </a>\r\n            <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <a className={classes.anchorColor} href=\"/images/resume.pdf\" download>\r\n                <DescriptionIcon className={classes.iconLinks} />\r\n            </a>\r\n        </List>\r\n    )\r\n}\r\n\r\n\r\nexport default NavbarList\r\n","import React, { useState, useEffect } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Drawer, Typography } from \"@material-ui/core\"\r\nimport NavbarList from './NavbarList'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    navDisplayFlex: {\r\n        display: `inline-flex`,\r\n        justifyContent: `space-between`\r\n    },\r\n    navbar: {\r\n        backgroundColor: theme.palette.bg?.main,\r\n        borderColor: theme.palette.dark?.main,\r\n        color: theme.palette.dark?.main,\r\n        height: `66px`\r\n    },\r\n    iconLinks: {\r\n        display: `inline-flex`,\r\n        height: `48px`,\r\n        width: `48px`,\r\n\r\n    },\r\n    rightAppBar: {\r\n        marginLeft: `auto`,\r\n        marginRight: -12,\r\n    },\r\n    justifyContent: {\r\n        display: `flex`,\r\n        justifyContent: `center`\r\n    },\r\n    mobileNav: {\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        justifyContent: `flex-end`,\r\n\r\n    },\r\n    menu: {\r\n        backgroundColor: theme.palette.bg?.main,\r\n        border: `0px`,\r\n        borderLeftWidth: `2px`,\r\n        borderColor: theme.palette.dark?.main,\r\n        borderStyle: `solid`,\r\n        color: theme.palette.dark?.main,\r\n        display: `flex`,\r\n        flexDirection: `column`,\r\n        alignItems: `center`,\r\n        height: \"100vh\",\r\n        width: `40vw`,\r\n    }\r\n}))\r\n\r\n\r\nconst Navbar: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        mobileView: false,\r\n        drawerOpen: false\r\n    })\r\n\r\n    const { mobileView, drawerOpen } = state;\r\n\r\n    useEffect(() => {\r\n        const setResponsiveness = () => {\r\n            return window.innerWidth < 900\r\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n                : setState((prevState) => ({ ...prevState, mobileView: false }))\r\n        };\r\n        setResponsiveness();\r\n        window.addEventListener('resize', () => setResponsiveness())\r\n    }, [])\r\n\r\n    const displayMobile = () => {\r\n        const handleDrawerOpen = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n        const handleDrawerClose = () =>\r\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n        return (\r\n            <AppBar position=\"fixed\" className={classes.navbar}>\r\n                <IconButton\r\n                    {...{\r\n                        edge: 'start',\r\n                        color: 'inherit',\r\n                        'aria-label': 'menu',\r\n                        'aria-haspopup': 'true',\r\n                        onClick: handleDrawerOpen,\r\n\r\n                    }}\r\n                    className={classes.mobileNav}\r\n                >\r\n                    <MenuIcon className={classes.iconLinks} />\r\n                </IconButton>\r\n                <Drawer\r\n                    {...{\r\n                        anchor: 'right',\r\n                        open: drawerOpen,\r\n                        onClose: handleDrawerClose,\r\n                    }}>\r\n                    <NavbarList classprop={classes.menu} />\r\n                </Drawer>\r\n            </AppBar>\r\n        )\r\n\r\n    }\r\n\r\n    const displayDesktop = () => {\r\n        return (\r\n            <AppBar position=\"fixed\" className={classes.navbar}>\r\n                <Toolbar className=\"nav-style\">\r\n                    <Typography className={classes.justifyContent} component=\"h3\">\r\n                        RYAN ROYALTY\r\n                    </Typography>\r\n                    <section className={classes.rightAppBar}>\r\n                        <NavbarList classprop={classes.navDisplayFlex} />\r\n                    </section>\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {mobileView ? displayMobile() : displayDesktop()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { Container, BottomNavigation, Grid, Typography } from '@material-ui/core'\nimport React from 'react';\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: `flex`,\n        flexDirection: `column`,\n        backgroundColor: theme.palette.bg?.main,\n        borderTopWidth: `2px`,\n        borderColor: theme.palette.dark?.main,\n        borderStyle: `solid`,\n        color: theme.palette.light?.main,\n        justifyContent: `center`,\n        alignItems: `center`,\n        width: `100%`,\n        height: `auto`,\n        margin: `0`,\n        padding: `0`\n    },\n    nav: {\n        display: `flex`,\n        flexDirection: `column`,\n        backgroundColor: theme.palette.bg?.main,\n        justifyContent: `center`,\n        alignItems: `center`,\n        width: `99%`,\n        height: `auto`,\n        margin: `0`,\n        padding: `0`\n    },\n    typography: {\n        display: `flex`,\n        color: theme.palette.light?.main,\n        alignItems: `center`,\n        justifyContent: `center`,\n        flexDirection: `row`,\n        fontSize: `.7rem`\n    },\n    anchorColor: {\n        color: theme.palette.light?.main,\n    },\n}));\n\n\nconst Footer: React.FC = (): JSX.Element => {\n\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.root} maxWidth='xl'>\n            <BottomNavigation className={classes.nav} style={{ paddingTop: \"25px\", paddingBottom: \"25px\" }}>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"flex-start\"\n                    spacing={1}\n                >\n                    <Grid item xs={12} sm={4}>\n                        <Typography className={classes.typography}>\n                            This portfolio was created using React, TypeScript and Material UI.\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <a className={classes.anchorColor} href=\"https://github.com/rroyalty/rroyalty.github.io\" target=\"_blank\" rel=\"noreferrer\">\n                            <Typography className={classes.typography}>\n                                Portfolio Repository\n                            </Typography>\n                        </a>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Typography className={classes.typography}>\n                            Last Updated: 06/23/2021\n                        </Typography>\n                    </Grid>\n\n                </Grid>\n            </BottomNavigation>\n        </Container>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Landing from \"./views/Landing\"\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nconst App: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <Navbar />\n      <Landing />\n      <Footer />\n    </>\n\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme, responsiveFontSizes, Theme } from \"@material-ui/core/styles\";\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n  interface Palette {\n    wayback?: Palette['primary']; \n    bg?: Palette['primary']; \n    dark?: Palette['primary'];\n    light?: Palette['primary'];\n  }\n  interface PaletteOptions {\n    wayback?: PaletteOptions['primary']; \n    bg?: PaletteOptions['primary'];\n    dark?: PaletteOptions['primary'];\n    light?: PaletteOptions['primary'];\n  }\n}\n\nlet theme: Theme = createMuiTheme({\n  palette: {\n    wayback: {\n      main: \"#f3f9ed\",\n    },\n    bg: {\n      main: fade(\"#899d73\", 1),\n    },\n    dark: {\n      main: \"#353535\",\n    },\n    light:{\n      main: \"#003300\",\n    }\n  },\n  typography: {\n    fontFamily: [\n      \"Lora\",\n      \"serif\",\n    ].join(\",\"),\n    fontSize: 8,\n    htmlFontSize: 8 \n  },\n});\n\ntheme = responsiveFontSizes(theme);\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}